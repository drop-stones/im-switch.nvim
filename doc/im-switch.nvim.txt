*im-switch.nvim.txt*         For NVIM v0.8.0        Last change: 2025 March 22

==============================================================================
Table of Contents                           *im-switch.nvim-table-of-contents*

1. im-switch.nvim                              |im-switch.nvim-im-switch.nvim|
  - ‚ú® Features                  |im-switch.nvim-im-switch.nvim-‚ú®-features|
  - ‚ö°Ô∏è Requirements    |im-switch.nvim-im-switch.nvim-‚ö°Ô∏è-requirements|
  - üì¶ Installation        |im-switch.nvim-im-switch.nvim-üì¶-installation|
  - üñ•Ô∏è Executable for Input Method Switching|im-switch.nvim-im-switch.nvim-üñ•Ô∏è-executable-for-input-method-switching|
  - ‚öôÔ∏è Configuration  |im-switch.nvim-im-switch.nvim-‚öôÔ∏è-configuration|
  - License                            |im-switch.nvim-im-switch.nvim-license|

==============================================================================
1. im-switch.nvim                              *im-switch.nvim-im-switch.nvim*

`im-switch.nvim` is a Neovim plugin that automatically switches the input
method (IM) based on specific events. This is useful for users who frequently
switch between different input methods (e.g., English and Japanese) while
coding.


‚ú® FEATURES                      *im-switch.nvim-im-switch.nvim-‚ú®-features*

- üîÑ Switch input method according to Neovim events
- üì¶ No need to install other tools to switch input method like im-select <https://github.com/daipeihust/im-select>
- üñ•Ô∏è Works on Windows/macOS/Linux


‚ö°Ô∏è REQUIREMENTS        *im-switch.nvim-im-switch.nvim-‚ö°Ô∏è-requirements*

  OS              Requirements
  --------------- ------------------------------------------------
  All OS          Neovim >= 0.10.0
  Windows/macOS   cargo >= 1.75.0 (optional)
  Linux           An input method framework (e.g., fcitx5, ibus)

üì¶ INSTALLATION            *im-switch.nvim-im-switch.nvim-üì¶-installation*

Install the plugin with your preferred package manager.


LAZY.NVIM ~

>lua
    {
      "drop-stones/im-switch.nvim",
      dependencies = { "nvim-lua/plenary.nvim" },
      event = "VeryLazy",
      opts = {
        -- your configurations
      }
    }
<


üñ•Ô∏è EXECUTABLE FOR INPUT METHOD SWITCHING*im-switch.nvim-im-switch.nvim-üñ•Ô∏è-executable-for-input-method-switching*

Neovim itself cannot switch the input method directly. Instead, this plugin
invokes an external executable to handle the switching process.


üåê WINDOWS/MACOS ~

On Windows/macOS, a Rust-based command-line utility, `im-switch`, is required.

If `cargo` is installed, `im_switch` will be built automatically during plugin
installation. Otherwise, a pre-built binary will be used.


  [!WARNING] Pre-built binaries are available only for:
    OS        Architecture
    --------- --------------
    Windows   x86_64
    macOS     arm64
  If you need a different version, install cargo and build it manually.

üêß LINUX ~

On Linux, input method switching is handled through an input method framework
(e.g., `fcitx5`, `ibus`).

Make sure your system has an appropriate input method framework installed and
configured.


‚öôÔ∏è CONFIGURATION      *im-switch.nvim-im-switch.nvim-‚öôÔ∏è-configuration*

You can customize **im-switch** behavior with the following options. Expand to
see the list of all the default options below.

Default Options ~

>lua
    {
      -- Events that set the default input method.
      set_default_im_events = { "VimEnter", "FocusGained", "InsertLeave", "CmdlineLeave" },
    
      -- Events that save the current input method.
      save_im_events = { "InsertLeavePre" },
      
      -- Events that restore the previously saved input method.
      set_previous_im_events = { "InsertEnter" },
    
      -- Windows settings
      windows = {
        -- Enable or disable the plugin on Windows/WSL2.
        enabled = false,
      };
      
      -- macOS settings
      mac = {
        -- Enable or disable the plugin on macOS.
        enabled = false,
    
        -- The input method set when `set_default_im_events` is triggered.
        default_im = "",
      },
      
      -- Linux settings
      linux = {
        -- Enable or disable the plugin on Linux.
        enabled = false,
    
        -- The input method set when `set_default_im_events` is triggered.
        default_im = "",
    
        -- The command used to get the current input method when `save_im_events` is triggered.
        obtain_im_command = {},
    
        -- The command used to set the input method when `set_default_im_events` or `set_previous_im_events` is triggered.
        set_im_command = {},
      },
    }
<


  [!important] If you encounter any issues, run `:checkhealth im-switch` to
  diagnose problems.

üîß GENERAL CONFIGURATION ~


SET_DEFAULT_IM_EVENTS

Events that **set the default input method**.

>lua
    set_default_im_events = { "VimEnter", "FocusGained", "InsertLeave", "CmdlineLeave" }
<


SAVE_IM_EVENTS

Events that **save the current input method**. The saved input method is
restored when `set_previous_im_events` is triggered.

>lua
    save_im_events = { "InsertLeavePre" },
<


SET_PREVIOUS_IM_EVENTS

Events that **restore the previously saved input method**.

>lua
    set_previous_im_events = { "InsertEnter" },
<


  [!TIP] **Setting Default IM on Mode Change**
  To set the default input method when switching modes:
  >lua
      set_default_im_events = { "VimEnter", "InsertEnter", "FocusGained", "InsertLeave", "CmdlineLeave" },
      save_im_events = {},
      set_previous_im_events = {},
  <

ü™ü WINDOWS CONFIGURATION ~


WINDOWS.ENABLED

Enable or disable the plugin on Windows/WSL2.

>lua
    windows = {
      enabled = false,
    },
<


üçé MACOS CONFIGURATION ~


MAC.ENABLED

Enable or disable the plugin on macOS.

>lua
    mac = {
      enabled = true,
    },
<


MAC.DEFAULT_IM

The input method set when `set_default_im_events` is triggered.

>lua
    mac = {
      default_im = "com.apple.keylayout.ABC",
    },
<


üêß LINUX CONFIGURATION ~


LINUX.ENABLED

Enable or disable the plugin on Linux.

>lua
    linux = {
      enabled = true,
    },
<


LINUX.DEFAULT_IM

The input method set when `set_default_im_events` is triggered.

>lua
    linux = {
      default_im = "keyboard-us",
    },
<


LINUX.OBTAIN_IM_COMMAND

The command used to **get the current input method** when `save_im_events` is
triggered.

>lua
    linux = {
      obtain_im_command = { "fcitx5-remote", "-n" },
    },
<


LINUX.SET_IM_COMMAND

The command used to **set the input method** when `set_default_im_events` or
`set_previous_im_events` is triggered.

>lua
    linux = {
      set_im_command = { "fcitx5-remote", "-s" },
    },
<


LICENSE                                *im-switch.nvim-im-switch.nvim-license*

This project is licensed under the MIT License - see the LICENSE <LICENSE> file
for details.

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
